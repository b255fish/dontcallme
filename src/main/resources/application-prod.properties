### common properties
## Hibernate Properties  // Configuring MySQL Database
# Spring Boot uses Hibernate as the default JPA implementation.
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.port=8081
## wait for available all network
server.address=0.0.0.0

### default value.. ? management is for actuator?
# management.health.db.enabled=true


### prod (production) properties; use dontcallme image in docker-compose-deploy.yml
## ★ requirements when deployment {docker-compomse up, docker stack deploy} requirements
## ★ This may take 60 seconds or more. You will need to make sure that mysql is turned on with the "service ls" command so spring will be turned on.
## "docker stack deploy"
## IntelliJ cannot catch value such as Vaadin properties to announce developer
docker-secret.bind-path=/run/secrets
# npm install problem in DevMode  ->  When only deploy, not devMode
vaadin.productionMode=true
# Hibernate ddl auto
spring.jpa.hibernate.ddl-auto=none
# use service communications, not between containers
spring.datasource.username=${docker-secret-mysql_user}
spring.datasource.password=${docker-secret-mysql_user_password}
spring.datasource.url=jdbc:mysql://mysql:3306/${docker-secret-mysql_database}?serverTimezone=UTC&characterEncoding=UTF-8
## spring security: default: user, spring.security.user.password=: refer to log // 나중에 secret 으로 교체 필요
spring.security.user.name=prod
spring.security.user.password=prodprod

## SSL - server
server.ssl.enabled=true
server.http2.enabled=true
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2, TLSv1.3
server.ssl.key-alias=server
server.ssl.key-store-type=PKCS12
server.ssl.key-store=/_mc_ooparts_best-server.p12
server.ssl.key-store-password=${docker-secret-server_store_password}

#X error: server.ssl.ciphers=AEAD_AES128_GCM_SHA256, AEAD-AES256-GCM-SHA384, AEAD-CHACHA20-POLY1305-SHA256
# client // error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty    // (possibly) it causes in only OpenJDK not JDK
#server.ssl.client-auth=need
#server.ssl.trust-store-type=PKCS12
#server.ssl.trust-store=./_secret/_mc_ooparts_best-client.p12
#server.ssl.trust-store-password=